name: CI workflow

on:
    push:
        branches: [ main ]
    pull_request:
        branches: [ main ]

jobs:
    build:
        runs-on: ubuntu-latest
    
        steps:
        - name: Checkout sourcode
          uses: actions/checkout@v3

        - name: Set up AWS CLI
          uses: aws-actions/configure-aws-credentials@v2
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-east-1
        - name: Update kubeconfig
          run: aws eks update-kubeconfig --name weather-app-cluster --region $AWS_REGION

        - name: Get backend external URL and generate .env
          working-directory: ./frontend
          run: |
            BACKEND_HOST=$(kubectl get svc weather-backend-svc -o jsonpath="{.status.loadBalancer.ingress[0].hostname}")
            echo "VITE_API_URL=http://$BACKEND_HOST:5000" > .env

        - name: Install dependencies and build
          working-directory: ./frontend
          run: |
            npm install
            npm run build
        - name: Configure Git identity
          working-directory: ./frontend
          env:
            GIT_USER: N-geek
            GIT_EMAIL: nhitran@tutamail.com
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          run: |
            git config --global user.name "$GIT_USER"
            git config --global user.email "$GIT_EMAIL"
            git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }}.git

        - name: Deploy frontend to GitHub Pages
          working-directory: ./frontend
          run: |
            npm run deploy

        - name: Set up Docker
          uses: docker/setup-buildx-action@v3

        - name: Install Docker Compose
          run: |
            sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.5/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
            docker-compose version

        - name: Clean up all image before create
          run: |
            if [ "$(docker ps -q)" ]; then
              docker stop $(docker ps -q)
              docker rm $(docker ps -aq)
            fi

        - name: Build docker image
          run: |
            echo "WEATHER_API=${{ secrets.WEATHER_API }}" >> .env
            docker-compose up --build -d
            sleep 5
        
        - name: Test application
          run: |
            sleep 3
            curl --fail http://localhost:5000/weather?city=London
            curl --fail http://localhost:3000
        
        - name: Login to docker hub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        
        - name: Build and push frontend image
          uses: docker/build-push-action@v5
          with:
            context: ./frontend
            push: true
            tags: |
              ngeek4geek/weather-app-frontend:latest
              ngeek4geek/weather-app-frontend:${{ github.sha }}

        - name: Build and push backend image
          uses: docker/build-push-action@v5
          with:
            context: ./backend
            push: true
            tags: |
              ngeek4geek/weather-app-backend:latest
              ngeek4geek/weather-app-backend:${{ github.sha }}

        - name: Clean up
          if: always()
          run: |
            docker stop $(docker ps -q)