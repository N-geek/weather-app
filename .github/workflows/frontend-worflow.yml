name: frontend workflow

on:
  push:
    branches: [main]
    paths:
      - 'frontend/**'
      - 'helm/**'
      - '.github/workflows/frontend*'

jobs:
    build:
        runs-on: ubuntu-latest
        env:
          IMAGE_NAME:  ngeek4geek/weather-app-frontend
          IMAGE_TAG: ${{ github.sha }}
    
        steps:
        - name: Checkout sourcode
          uses: actions/checkout@v3
        
        - name: Setup Node.js
          uses: actions/setup-node@v3
          with:
            node-version: 18
        
        - name: Install dependecies and build
          working-directory: ./frontend
          run: |
            npm install
            npm run build
        
        - name: Setup docker buildx
          uses: docker/setup-buildx-action@v3

        - name: Login to docker
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        
        - name: Build and push docker image
          uses: docker/build-push-action@v5
          with:
            context: ./frontend
            push: true
            tags: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

        - name: Clean up
          if: always()
          run: |
            docker image prune -af
            docker builder prune -af
    deploy:
      needs: build
      runs-on: ubuntu-latest
      env:
        IMAGE_NAME:  ngeek4geek/weather-app-frontend
        IMAGE_TAG: ${{ github.sha }}
        AWS_REGION: us-east-1
        AWS_CLUSTER: weather-app-cluster

      steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup kubectl
        run: |
          aws eks update-kubeconfig --name $AWS_CLUSTER --region $AWS_REGION
          
      - name: Get frontend external URL
        id: get-ip
        run: |
          export URL=$(kubectl get svc weather-frontend-svc -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
          echo "frontend_url=http://$URL" >> $FRONTEND_URL_OUTPUT
      
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.13.3

      - name: Upgrade Helm Chart
        run: |
          helm upgrade weather ./helm \
          --install \
          --namespace default \
          --wait \
          --timeout 20m \
          --set backend.image.repository=$IMAGE_NAME \
          --set backend.image.tag=$IMAGE_TAG

      - name: Test frontend calls backend correctly
        run: |
          echo "Testing frontend at: ${{ steps.get-ip.outputs.frontend_url }}/weather?query=London"
          for i in {1..10}; do
            response=$(curl -s -H "Accept: application/json" "${{ steps.get-ip.outputs.frontend_url }}/weather?query=London")
            echo "Response: $response"

            # Check if it includes expected field (location, temp...)
            if echo "$response" | grep -q "location"; then
              echo "Frontend is calling backend successfully"
              exit 0
            fi
            sleep 5
          done

          echo "Frontend did not respond correctly after retries"
          exit 1